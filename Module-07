Network Components
===================
IP
subnet mask
Gateway
Static vs DHCP
interface
Interface MAC Address

Network Files and Commands
==========================
Interface Detection
Assigning an IP Address
Interface configuration files
    /etc/nsswitch.conf
    /etc/hosts
    /etc/sysconfig/network
    /etc/sysconfig/network-scripts/ifcfg-nic
    /etc/resolv.conf

Network Commands
===================
ping
ifconfig
ifup or ifdown
netstat
tcpdump

NIC
=======
NIC = Network Interface Card

    example ethtool enp0s3

Other NICs
    lo = The loopback device is a special interface that your device use to communicate with itself. It is used mainly for daignostics and troubleshooting and to connect to servers running on the local machine

    virb0 = The virbr0 or virtual bridge 0 interface is used for NAT (Network Address Translation). Virtual environments sometimes use it to connect to the outside network

NIC Bonding
=================
NIC = Network Interface Card (PC or laptop)

NIC(Network Interface Card) bonding is also known as Network bonding. It can be defined as the aggregation or combination of multiple NIC into a single bond interface.

It is main purpose is to provide high availability and redundancy

NIC Bonding Procedure
=====================
modprobe bonding
modinfo bonding
Create /etc/sysconfig/network-scripts/ifcfg-bond0
Edit /etc/sysconfig/network-scripts/ethernet1
Edit /etc/sysconfig/network-scripts/ethernet2

New Network utilities
=====================
Network configuration methods
    -nmtui
    -nmcli
    -nm-connection-editor
    -GNOME 

Getting Started with Network Manager
    NetworkManager is a service that provides set of tools designed specifically to make it easier to manage the networking configuration on Linux systems and is the default network management service on RHEL 8 & 9

    - It makes network management easier
    -It provides easy setup of connection to the user
    -NetworkManager offers management through different tools such as GUI, nmtui, and nmcli

    Network configuration methods
    ==================================

    nmcli - short for network manager command line interface. This tool is useful when access to a graphical environment is not available and can also be used within scripts to makes network configuration changes

    nmtui - short for network manager text user interface. This tool can be run within any terminal and allows changes to be made by menu selections and entering data

    nm-connection-editor = a full graphical management tool providing access to most of the NetworkManager configuration options. It can only be accessed through the desktp or console

    GNOME Settings = the network screen of the GNOME desktop setting application allow basic network management tasks to be performed

Download Files or Apps
=======================

wget = the non-interactive network downloader

Linux = wget
    - Example in Linux
        wget http://website.com/filename

Why
    Most of the servers in corporate
    environment do NOT have internet access


curl and ping Commands
=========================

Linux = curl

Linux = ping

Example in Linux
    -curl http://website.com/filename
    -curl -O http://website.com/filename

    ping  www.pdcc.io


FTP - File Transfer Protocol
=============================

The File Transfer Protocol is a standard network protocol used for the transfer of computer files between a client and server on a computer network. FTP is built on a client-server model architectur using separate control and data connections between the client and the server

Protocol = Set of rules used by computers to communicate

Default FTP Port = 21

For lab we need  2 Linux machines

    -Client = practice
    -Server = test

Install and configure FTP on the remote server
==============================================
    # Become root
    # rpm -qa | grep ftp
    # ping google.com
    # yum install vsftpd
    # vi /etc/vsftpd.conf     (make a copy first)
        - cp vsftpd.conf vsftpd.conf.orig


    Find the following line and makes the changes shown below
    #Disable anonymous login##
        -anonymous_enable=NO
    
    #Uncomment##
        -ascii_upload_enable=YES
        -ascii_download_enable=YES
    
    ##Uncomment - Enter you Welcome message - This is optional##
        - ftpd_banner=Welcome to UNIXMEN FTP service
    
    ##Add at the end of this file##
        - use_localtime=YES

    #systemctl start vsftpd
    #systemctl enable vsftpd
    #systemctl stop firewalld
    #systemctl disable firewalld
    # useradd JoeKollie (if the user does not exist)

Install FTP client on the client server
======================================

    #Become root
    #yum install ftp
    #su - username
    $ touch kruger


Commands to transfer file to the FTP server
============================================

    ftp 192.168.0.x
    Enter username and password
    bi
    hash
    put kruger
    bye


SCP - Secure Copy Protocol
============================

The Secure Copy Protocol or SCP helps to transfer computer files securely from a local to a remote host. It is somewhat similar to the File Transfer Protocol "FTP" but it adds security and authentication

Protocol = Set of rules used by computers to communicate

Default SCP Port = 22 (same as SSH)

For this lecture we need  2 Linux machines

    -Client = practice
    -Server = test

Procedure:

SCP Commands to transfer file to the remote server
==================================================

Login as yourself
touch filename
scp filename test@192.168.0.x:/home/test
Enter username and password



rsync - Remote Synchronization
===================================
rsync - is a utility for efficiently transferring and synchronizing  files within the same computer or to a remote computer by comparing the modification times and sizes of files.

    -rsync is a lot faster than ftp or scp

    - This utility is mostly used to backup the files and directories from one server to another

    Default rsync Port = 22 (same as SSH)

        -Exercise: 2 Linux machines are require
            Client = practice
            Server = test

Basic syntax of rsync command
    #rsync options source destination

Install rsync in your Linux machine (check if it already exists)
    #yum install rsync (On CentOS/Redhat based systems)
    #apt-get install rsync (On Ubuntu/Debian based systems)

rsync a file on a local machine

    $tar cvf backup.tar (tar the entire home (home/test))
    $mkdir /tmp/backups
    $rsync -zvh backup.tar /tmp/backups/

rsync a directory on a local machine
    $rsync -azvh /home/test /tmp/backups/

rsync a file to a remote machine
    $mkdir /tmp/backups (create /tmp/backups dir on remote server)
    rsync -avz backup.tar test@192.168.0.x:/tmp/backups

rsync a file from a remote machine
    $touch serverfile
    $rsync -avzh test@192.168.0.x:/home/test/serverfile /tmp/backups


System Updates and Repos
==========================

yum (CentOS), apt-get(other Linux)

rpm (Red hat Package Manager) - is used when you already have a package download on your system and can be used to install the package locally. It is mostly used in an environment where there is no internet access

yum - download and install the package(s)

System Upgrade/Patch Management
================================

There are two type of upgrades

    Major version = 5,6,7

Major version = yum command (cannot be upgraded using the yum command)

Minor version = yum update

Example:
    yum update -y

yum update vs. upgrade

upgrade = delete packages

update = preserve



