Network Components
===================
IP
subnet mask
Gateway
Static vs DHCP
interface
Interface MAC Address

Network Files and Commands
==========================
Interface Detection
Assigning an IP Address
Interface configuration files
    /etc/nsswitch.conf
    /etc/hosts
    /etc/sysconfig/network
    /etc/sysconfig/network-scripts/ifcfg-nic
    /etc/resolv.conf

Network Commands
===================
ping
ifconfig
ifup or ifdown
netstat
tcpdump

NIC
=======
NIC = Network Interface Card

    example ethtool enp0s3

Other NICs
    lo = The loopback device is a special interface that your device use to communicate with itself. It is used mainly for daignostics and troubleshooting and to connect to servers running on the local machine

    virb0 = The virbr0 or virtual bridge 0 interface is used for NAT (Network Address Translation). Virtual environments sometimes use it to connect to the outside network

NIC Bonding
=================
NIC = Network Interface Card (PC or laptop)

NIC(Network Interface Card) bonding is also known as Network bonding. It can be defined as the aggregation or combination of multiple NIC into a single bond interface.

It is main purpose is to provide high availability and redundancy

NIC Bonding Procedure
=====================
modprobe bonding
modinfo bonding
Create /etc/sysconfig/network-scripts/ifcfg-bond0
Edit /etc/sysconfig/network-scripts/ethernet1
Edit /etc/sysconfig/network-scripts/ethernet2

New Network utilities
=====================
Network configuration methods
    -nmtui
    -nmcli
    -nm-connection-editor
    -GNOME 

Getting Started with Network Manager
    NetworkManager is a service that provides set of tools designed specifically to make it easier to manage the networking configuration on Linux systems and is the default network management service on RHEL 8 & 9

    - It makes network management easier
    -It provides easy setup of connection to the user
    -NetworkManager offers management through different tools such as GUI, nmtui, and nmcli

    Network configuration methods
    ==================================

    nmcli - short for network manager command line interface. This tool is useful when access to a graphical environment is not available and can also be used within scripts to makes network configuration changes

    nmtui - short for network manager text user interface. This tool can be run within any terminal and allows changes to be made by menu selections and entering data

    nm-connection-editor = a full graphical management tool providing access to most of the NetworkManager configuration options. It can only be accessed through the desktp or console

    GNOME Settings = the network screen of the GNOME desktop setting application allow basic network management tasks to be performed

Download Files or Apps
=======================

wget = the non-interactive network downloader

Linux = wget
    - Example in Linux
        wget http://website.com/filename

Why
    Most of the servers in corporate
    environment do NOT have internet access


curl and ping Commands
=========================

Linux = curl

Linux = ping

Example in Linux
    -curl http://website.com/filename
    -curl -O http://website.com/filename

    ping  www.pdcc.io


FTP - File Transfer Protocol
=============================

The File Transfer Protocol is a standard network protocol used for the transfer of computer files between a client and server on a computer network. FTP is built on a client-server model architectur using separate control and data connections between the client and the server

Protocol = Set of rules used by computers to communicate

Default FTP Port = 21

For lab we need  2 Linux machines

    -Client = practice
    -Server = test

Install and configure FTP on the remote server
==============================================
    # Become root
    # rpm -qa | grep ftp
    # ping google.com
    # yum install vsftpd
    # vi /etc/vsftpd.conf     (make a copy first)
        - cp vsftpd.conf vsftpd.conf.orig


    Find the following line and makes the changes shown below
    #Disable anonymous login##
        -anonymous_enable=NO
    
    #Uncomment##
        -ascii_upload_enable=YES
        -ascii_download_enable=YES
    
    ##Uncomment - Enter you Welcome message - This is optional##
        - ftpd_banner=Welcome to UNIXMEN FTP service
    
    ##Add at the end of this file##
        - use_localtime=YES

    #systemctl start vsftpd
    #systemctl enable vsftpd
    #systemctl stop firewalld
    #systemctl disable firewalld
    # useradd JoeKollie (if the user does not exist)

Install FTP client on the client server
======================================

    #Become root
    #yum install ftp
    #su - username
    $ touch kruger


Commands to transfer file to the FTP server
============================================

    ftp 192.168.0.x
    Enter username and password
    bi
    hash
    put kruger
    bye


SCP - Secure Copy Protocol
============================

The Secure Copy Protocol or SCP helps to transfer computer files securely from a local to a remote host. It is somewhat similar to the File Transfer Protocol "FTP" but it adds security and authentication

Protocol = Set of rules used by computers to communicate

Default SCP Port = 22 (same as SSH)

For this lecture we need  2 Linux machines

    -Client = practice
    -Server = test

Procedure:

SCP Commands to transfer file to the remote server
==================================================

Login as yourself
touch filename
scp filename test@192.168.0.x:/home/test
Enter username and password



rsync - Remote Synchronization
===================================
rsync - is a utility for efficiently transferring and synchronizing  files within the same computer or to a remote computer by comparing the modification times and sizes of files.

    -rsync is a lot faster than ftp or scp

    - This utility is mostly used to backup the files and directories from one server to another

    Default rsync Port = 22 (same as SSH)

        -Exercise: 2 Linux machines are require
            Client = practice
            Server = test

Basic syntax of rsync command
    #rsync options source destination

Install rsync in your Linux machine (check if it already exists)
    #yum install rsync (On CentOS/Redhat based systems)
    #apt-get install rsync (On Ubuntu/Debian based systems)

rsync a file on a local machine

    $tar cvf backup.tar (tar the entire home (home/test))
    $mkdir /tmp/backups
    $rsync -zvh backup.tar /tmp/backups/

rsync a directory on a local machine
    $rsync -azvh /home/test /tmp/backups/

rsync a file to a remote machine
    $mkdir /tmp/backups (create /tmp/backups dir on remote server)
    rsync -avz backup.tar test@192.168.0.x:/tmp/backups

rsync a file from a remote machine
    $touch serverfile
    $rsync -avzh test@192.168.0.x:/home/test/serverfile /tmp/backups


System Updates and Repos
==========================

yum (CentOS), apt-get(other Linux)

rpm (Red hat Package Manager) - is used when you already have a package download on your system and can be used to install the package locally. It is mostly used in an environment where there is no internet access

yum - download and install the package(s)

System Upgrade/Patch Management
================================

There are two type of upgrades

    Major version = 5,6,7

Major version = yum command (cannot be upgraded using the yum command)

Minor version = yum update

Example:
    yum update -y

yum update vs. upgrade

upgrade = delete packages

update = preserve

Create local Repository from DVD
======================================

What is local repository ?
    - is a repository that hold all of your local rpm packages locally

Command
    -createrepo

Advance Package Management
==============================
Installing Packages
Upgrading
Deleting
View package details information
Identify source or location
information
Packages configuration files

Rollback Updates and Patches
============================
Virtual machine
Physical machine

Rollback a package or patch
    - yum install <package-name>
    - yum history undo <id>

Rollback an update

    Downgrading a system to minor version (ex RHEL 7.1 to RHEL 7.0) is not recommended as this might leave the system in undesired or unstable state

    yum update = Update will preserve the 
    yum upgrade = upgrade will delete obsolete packages
    yum history undo <id>

SSH AND Telnet
=====================

Telnet = unsecured connection between computers
SSH = Secured

Two type of packages for most of the services

    -Client package
    -Server package

DNS = Domain Name System
========================

Purpose
    Hostname to IP ---------------- (A Record)
    IP to hostname ---------------- (PTR Record)
    Hostname to Hostname-----------   (CNAME Record)

Files

        /etc/named.conf
        /var/named

Service
    systemctl restart named


Download, Install and Configure DNS
===================================

Create a snapshot of the virtual machine

Setup

    Master DNS
    Secondary or Slave DNS
    Client

Domain Name = lab.local
IP address = My IP address on enp0s3

Install DNS package
==================

    - yum install bind bind-utils -y

Configure DNS (Summary)
=========================

    Modify /etc/named.conf
    Create two zone files (forward.lab and reverse.lab)
    Modify DNS file permission and start the service


Hostname/IP lookup
=======================
Command used for DNS lookup
    nslookup - query internet name servers interactively
    dig - DNS lookup utility

NTP
============

Purpose
    - Time synchronization

File
    /etc/ntp.conf

Service
    systemctl restart ntpd

Command
    ntpq

chronyd - (new version for NTP)
==================================

Purpose = Time synchronization

Package name = chronyd

Configuration file = /etc/chronyd.conf

Log file = /var/log/chrony

Service = systemctl start /restart chronyd

Program command = chronyc

New System Utility Command
==========================

The timedatectl command is a new utility for RHEL/CentOS 7/8 based distributions which comes as a part of the systemd system and service manager

It is a replacement for old traditional date command

The timedatectl command shows/change date,time and timezone

It synchronizes the time with NTP server as well

    You can either use chronyd or ntpd and make the ntp setting in timedatectl as yes

    Or you can use systemd-timesyncd daemon to synchronize time is a replacement for ntpd and chronyd

Note : Redhat/CentOS does not provide this in daemon in its standard repo. You will have to download it separately


Sendmail
================

Purpose
    - send and receive emails

Files
    /etc/mail/sendmail.mc
    /etc/mail/sendmail.cf
    /etc/mail


Service
    systemctl restart sendmail


Command
    mail -s "subject line" email@receivermail.com


Web Server (httpd)
====================

Purpose = serve webpages


Service or Package name = httpd

Files = /etc/http/conf/httpd.conf
        /var/www/html/index.html

Service

    systemctl restart httpd
    systemctl enable httpd

Log Files 

    /var/log/httpd


Central Logger (RSYSLOG)
========================

Purpose = generate logs or collect logs from other servers

Service or package name = rsyslog

Configuration file = /etc/syslog.conf

Service

    systemctl restart rsyslog
    systemctl enable rsyslog

Linux OS Hardening
=====================

Things to consider when hardening Linux OS

    - User Account
    - Remove un-wanted packages
    - Stop un-used Services
    -Check on Listening Ports
    -Secure SSH Configuration
    -Enable Firewall(iptables/firewalld)
    -Enable SELinux
    -Change Listening Services Port Numbers
    -Keep your OS up to date (security patching)

Chage command - change user password expiry information


OpenLDAP Installation
======================

What is OpenLDAP?
    -

OpenLDAP Service
    - slapd

Start or Stop the service
    - systemctl start slapd
    - systemctl enable slapd

Configuration Files
    -/etc/openldap/slapd.d
    
Trace Network Traffic (traceroute)
====================================

The traceroute command is used in Linux to map the journey that a packet of information undertakes from its source to its destination. One use for traceroute is to locate when data loss occurs throughout a network, which could signify a node that's down.

Because each hop in the record reflects a new server or router between the originating PC and the intended target, reviewing the results of a traceroute scan also lets you identify slow points that may adversely affect your network traffic.


Example

# traceroute www.google.com


How to Open an Image File
==========================

Become root

dnf install GraphicsMagic

display image-

Configure and secure SSH
========================

SSH

    - SSH stand for secure shell - provides you with an interface to the Linux system. It takes in your commands and translate them to kernel to manage hardware


OpenSSH is a package/software

Its service daemon is sshd

SSH port # 22

SSH itself is secure, meaning communication through SSH is always encrypted but there should be some additional configuration can be done to make it more secure 
Following are the most common configuration an administrator should take to secure SSH

Configure Idle Timeout Interval

Avoid having an unattended SSH session you can set an Idle timeout interval

Become root
Edit your /etc/ssh/sshd_config file and add the following line
ClientAliveInterval 600
ClientAliveCountMax 0
# systemctl restart sshd

The idle timeout interval you are setting is in seconds (600 secs = 10 minutes). Once the interval has passed, the idle user will be automatically logged out.


Access Remote Server without Password(SSH-Key)
==============================================

Two reasons to access a remote machine
    -Repetitive logins
    -Automation through scripts

Keys are generated at user level
    -test
    -root

Process for client
===================
Step 1 - Generate the Key
# ssh-keygen

Step 2 - Copy the Key to the server

# ssh-copy-id root@I.P address

Step 3 - Loging from client to server
# ssh root@I.P address
# ssh -l root I.P address


Cockpit
==============
Cockpit is a server administration tool Red Hat, focused on providing a modern-looking and user-friendly interface to manage and administer servers

Cockpit is the easy to use integrated glanceable and open web-based interface for your servers

The application is available in most of the Linux distributions such as CentOS, Redhat, Ubuntu and Fedora

It is installed in Redhat 8 by default and it is optional in version 7

It can monitor system resources add or remove accounts, monitor system usage shut down the system and perform quite a few other tasks all through a very accessible web connection

Introduction to Firewall
==========================

What is Firewall
    - a wall that prevents the spread of fire


When data moves in and out of a server its packet information is tested against the firewall rules to see if its should be allowed or not

In simple words, a firewall is like a watchman, a bouncer, or shield that has a set of rules given and based on that rules they decide who can enter and leave


There are 2 type of firewalls in IT

    - Software = runs on operating system
    - Hardware = a dedicated appliance with firewall software


There are 2 tools to manage firewall in most of the Linux distributions
    -iptables = for  older Linux versions but still widely used
    -firewalld = for newer versions like 7 and up

You can run one or the other
    
Before working with iptables make sure firewalld is not running and disable it

    -service OR systemctl stop firewalld = to stop the service
    -systemctl disable firewalld = to prevent from starting at boot
    -systemctl mask forewalld = to prevent if from running by other programs


Now check if the iptables-service package installed
    -rpm -qa | grep iptables-service
    -yum install iptables-service - if not installed then

Start the service

    -systemctl start iptables
    -systemctl enable iptables

To check the iptables rules
    - iptables -L

To flush iptables
    -iptables -F

Firewalld works the same way as iptables but of course it has it own commands
    -firewall -cmd

It has a few pre-defined service rules that are very easy to turn on and off

    - Services such as NFS, NTP, HTTPD etc


Firewalld also has the following

    -Table
    -Chains
    -Rules
    -Targets

Run one or the other
    iptables or firewalld

Make sure iptables is stopped, disabled and mask

    -systemctl stop iptables 
    -systemctl disable iptables
    -systemctl mask iptables

Now check if firewalld package is installed

    rpm -qa | grep firewalld


Start firewalld
   
   systemctl start/enable 
   
Check the rule of firewalld

    firewall-cmd --list-all

Get the listing of all services firewalld is aware of

    -firewall-cmd --get-services

To make firewalld re-read the configuration added

    firewall-cmd --reload

The firewalld has multiple zone, to get a list of all zones
    - firewall-cmd --get-zones

To get the list of active zones
    - firewall-cmd --get-active-zones

To get firewall rules for public zone
    -firewall-cmd --zone=public --list-all

All services are pre-defined by firewalld. What if you want to add a 3rd party service

        -/usr/lib/firewalld/services/allservices.xml
        -Simply cp any xml file and change the service and port number

To add a service (http)
    - firewall-cmd --add-service=http

To remove a service
    -firewall-cmd --remove-service=http

To reload the firewall configuration
    -firewall-cmd --reload

To add or remove a service permanently
    -firewall-cmd --add-service=http --permanent
    -firewall-cmd --remove-service=http --permanent

To add a service that is not pre-defined by firewalld

    /usr/lib.firewalld/services/allservices.xml
    - Simply cp any xml file sap.xml and change the service and port number (32)
    - systemctl restart firewalld
    - firewall-cmd --get-services (to verify new service)
    - firewall-cmd --add-service=sap

To add a port

    -firewall-cmd --add-port=1110/tcp

To remove a port
    -firewall-cmd --remove-port=1110/tcp

To reject incoming traffic from an IP address

    -firewall-cmd --add-rich-rule='rule family="ipv4" source address="192.168.0.25" reject'

To block and unblock ICMP incoming traffic
    -firewall-cmd --add-icmp-block-inversion

To unblock ICMP incoming traffic
    -firewall-cmd --remove-icmp-block-inversion

To block outgoing traffic to a specific website/IP address
    - host -t a www.facebook.com = find IP address
    firewall-cmd --direct --add-rule ipv4 filter OUTPUT 0 -d  IP address -j DROP

Tune System Performance
======================

What is tuned?
    - Tuned pronounced as tune-d
    -Tune is for system tunining and d for daemon
    - It is systemd service that is used to tune Linux system performance
    - It is installed in CentOS/Redhat version 7 and 8 by default
        -tuned package name is tuned
    
    The tuned service comes with pre-defined profiles and settings 
    Based on selected profile the tuned service automatically adjust system to get the best
    performance.E.g tuned will adjest networking if you are downloading a large file or it will adjust IO settings if it detects high storage read/write

    Check if package has been installed

        -rpm -qa | grep tuned

    Installed tuned package if NOT installed already

        -yum install tuned
    
    Check tuned  service status

        -systemctl status | enable | start tuned

    Command to change setting for tuned daemon

        tuned-adm

    To check which profile is active

        -tuned-adm active
    
    To list available profiles

        -tuned-adm list
    
    To change to desired profile

        -tuned-adm profile profile-name

    Check for tuned recommendation
        -tuned-adm recommend
    
    Turn off setting daemon
        -tuned-adm off
    
    Change profile through web console
        - Login to https://IP.address:9090

        Overview > Configuration > Performance profile
    

    Another way of keeping your system fine tuned is by prioritzing processes through "nice" and "renice" command

    If a server has 1 CPU then it can execute 1 computation/process at a time as they come in (first come first served) while other processes must wait

    With nice and renice commands we can make the system to give preference to certain processes than others

    This priority can be set at 40 different levels

    To check process priority

        -top

    Nice value is a user-space and priority PR is the process's actual priority that use by Linux kernel.In Linux system priorities are 0 to 139 in which 0 to 99 for real and 100 to 139 for users

    Process priority can be views through ps command as well with the right options

        $ ps axo pid,com,nice,cls --sort=-nice

    To set the process priority

        nice -n # process-name

        e.g nice -n -15 top

    To change the process priority

        -renice -n # process-name
        e.g renice -n 12 PID


    Run Containers
    ===============

    What is a Container?

        Container allowed developers or programmer to test and build applications on any computer just by putting it in a container (bundled in with the software code, libraries and configuration files) and then on another computer regardless of its architecture

    What are the Container Software
    ===============================

        -docker
    
    Docker is the software used to create and manage containers

        -podman
            - is an alternative to docker
            Docker is not supported in RHEL 8

            It is daemon less, open source, Linux-native tool designed to develop, manage and run containers.

Getting Familiar with Redhat Container Technology
===============================================

    Redhat provides a set of command-line tools that can operate without a container engine, these include:

    podman - for directly managing pods and container images (run, stop , ps, attach etc)

    buildah - for building, pushing, and signing container images

    skopeo - for copying, inspecting, deleting, and signing images

    runc - for providing container run and build features to podman and buildah

    crun - an optional runtime that can be configured and gives greater flexibility control and security for rootless

Getting Familiar with podman Container Technology
================================================

When you hear about containers then you should know the following as well
    -images - containers can be created through images containers can be converted to images

    -pods - Group of containers deployed together on the host. In the podman logo there are 3 seals grouped together as a pod

Building, Running and Managing Containers
==========================================

To install podman
    - yum/dnf install podman -y
    - yum install docker -y


Creating alias to docker
    -alias docker=podman

Check podman version
    -podman -v

Getting help
    -podman --help or man podman

Check podman environment and registry/repository information
    -podman info

To search a specific image in repository
    -podman search httpd

To list any previously downloaded podman images
    -podman images

To download available images
    - podman pull docker.io/library/httpd

To confirm if images have been downloaded 
    - podman images

To list podman running containers

    -podman ps

To run a downloaded httpd containers

    - podman run -dt -p 8080:80/tcp docker.io/library/httpd
        (d - detach t=get the tty shell , p = port)
    
    podman ps or check httpd through web browser

To view podman logs
    -podman logs -l

To stop running container
    -podman stop con-name

To run a multiple containers of httpd by changing the port #

    -podman run -dt -p 8081:80/tcp docker.io/library/httpd
    -podman run -dt -p 8082:80/tcp docker.io/library/httpd

To stop and start a previously running container
    -podman stop|start con-name

To create a new container from the downloaded image
    -podman create --name httpd docker.io/library/httpd

To start the newly created container
    -podman start httpd

Manage containers through systemd
    First you have to generate a unit file
        -podman generate systemd --new --file --name httpd

Copy it systemd directory
    -cp /root/container-httpd.services /etc/systemd/system


Kickstart (Automate Linux Installation)
=======================================

Kickstart is a method to automate the Linux installation without the need for any intervention from the user.

With the help of kickstart you can automate questions that are asked during the installation e.g

- Language and timezone
- How the drives should be partitioned
- Which packages should be 



DHCP
========

DHCP the acroynm meaning Dynamic Host Configuration Protocol
    - in order to communicate over the network, a computer needs to have an IP address

DHCP server is responsible to automatically assign IP addresses to servers,laptop, desktops and other devices on the network

System Run Level
===================

System Run Levels

    Main Run level with init
    ----------------------------
    - 0 - shutdown (or halt) the system
    - 1 - single-user mode; usually aliased as s or S
    - 6 - Reboot the system

    Other Run levels
    ------------------

    2 - multiuser mode without networking
    3 - multiuser mode with networking
    5 - multiuser mode with networking and GUI

    Note: run-level 4 is undefined or not used/User-definable

Computer Boot Process
=====================

When the computer boot >  The CPU starts & pulls instructions from the BIOS software > ROM  > CMOS battery = complementary metal-oxide semi-conductor  - it has BIOS settings including system time, date as well as hardware settings

 > POST ( Power on self test)

 Linux Boot Process
 =======================

    BIOS - executes MBR

    MBR - executes GRUB

    GRUB - executes kernel

    Kernel - executes /sbin/init

    Init - executes runlevel programs
    
    Runlevel - execute from /etc/rc.d/rc*.d/






    

    



    




    
